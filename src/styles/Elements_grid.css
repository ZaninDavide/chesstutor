/* here you find the css attached to the elements mostly by their id */

#home_button {
  margin-top: auto;
  margin-bottom: auto;
  margin-right: 0px;
  margin-left: 0px;
}

#opsListPage, #openingPage {
  overflow-y: auto;
  overflow-x: hidden;
}

#newOpButton, #newVariButton {
  position: absolute;
  margin: 0px;
  padding: 0px;
  right: var(--mediumMargin);
  bottom: var(--mediumMargin);
  height: var(--uiElementHeight);
  width: var(--uiElementHeight);
  text-align: center;
  line-height: var(--uiElementHeight);
  font-size: var(--iconsFontSize);
}

#boardContainer {
  width: 100%;
  grid-area: boardContainer;
  display: grid;
  grid-template-columns:  1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
  grid-template-rows:     1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
}

#boardContainer.white_side{
  grid-template-areas:  "a8 b8 c8 d8 e8 f8 g8 h8" 
                        "a7 b7 c7 d7 e7 f7 g7 h7" 
                        "a6 b6 c6 d6 e6 f6 g6 h6" 
                        "a5 b5 c5 d5 e5 f5 g5 h5" 
                        "a4 b4 c4 d4 e4 f4 g4 h4" 
                        "a3 b3 c3 d3 e3 f3 g3 h3" 
                        "a2 b2 c2 d2 e2 f2 g2 h2" 
                        "a1 b1 c1 d1 e1 f1 g1 h1";
}

#boardContainer.black_side{
  grid-template-areas:  "h1 g1 f1 e1 d1 c1 b1 a1" 
                        "h2 g2 f2 e2 d2 c2 b2 a2" 
                        "h3 g3 f3 e3 d3 c3 b3 a3" 
                        "h4 g4 f4 e4 d4 c4 b4 a4" 
                        "h5 g5 f5 e5 d5 c5 b5 a5" 
                        "h6 g6 f6 e6 d6 c6 b6 a6"
                        "h7 g7 f7 e7 d7 c7 b7 a7"
                        "h8 g8 f8 e8 d8 c8 b8 a8";
}

#boardSVG {
  height: 100%;
  grid-column-start: 1;
  grid-column-end: 9;
  grid-row-start: 1;
  grid-row-end: 9;
  /*
  max-height: calc(100vh - var(--headerHeight) - var(--uiElementHeight) - 80px);
  max-width: calc(100vh - var(--headerHeight) - var(--uiElementHeight) - 80px);
  */
}

.pieceSVG {
  position: relative;
  width: 100%;
  transition: position top left grid-area;
  transition: 0.15s 0.15s 0.15s;
  will-change: position top left grid-area;
  left: 0px;
  top: 0px;
}

.pieceSVG.noAnimationPiece{
  /*-webkit-transition-property: none !important;
  -moz-transition-property: none !important;
  -o-transition-property: none !important;
  transition-property: none !important;*/
  z-index: 2;
}

.selection {
  width: 100%;
  height: 100%;
  position: relative;
  background-color: rgba(0, 0, 0, 0.15);
}

.moveCircle {
  width: 12.5%;
  height: 12.5%;
  max-height: calc((100vh - var(--headerHeight) - var(--uiElementHeight) - var(--uiElementHeight)) / 8);
  max-width: calc((100vh - var(--headerHeight) - var(--uiElementHeight) - var(--uiElementHeight)) / 8);
  position: absolute;
  will-change: transform;
  border-radius: 50%;
  background-color: rgba(0, 0, 0, 0.15);
}

#boardGrid{
  display: grid;
  width: 100vw;
  height:  calc(100vh - var(--headerHeight));
  max-width: calc(100vh - var(--headerHeight) - var(--uiElementHeight) - 80px);
  grid-template-rows: auto var(--uiElementHeight) 1fr;
  grid-template-areas: "boardContainer" "boardUI" "boardData";
}

#boardUI{
  min-height: var(--uiElementHeight);
  width: 100%;
  /*background-color: rgba(0, 0, 0, 0.15); add to make the gap between boardContainer and boardUI visible*/
  grid-area: boardUI;
  display: flex;
}

#boardData{
  grid-area: boardData;
  padding-left: var(--mediumMargin);
  padding-top: var(--smallMargin);
  overflow-y: auto;
  font-size: var(--smallTextSize);
}

.boardButton{
  margin: 0px !important; /* overwrite simpleButton */
  flex-grow: 1;
  /* TEXT */
  font-family: "Material Icons" !important; /* overwrite simpleButton */
  font-size: var(--iconsFontSize) !important; /* overwrite simpleButton */
  text-align: center;
  vertical-align: middle;
  line-height: var(--uiElementHeight); /* = height*/
}

.textBox{
  margin-top: var(--smallMargin);
  padding-left: 10px;
  border: 0px;
  height: var(--uiElementSmallHeight);
  width: calc(100% - 10px); /*10px = padding-left;*/
  background-color: var(--hoverBackColor);
  color: var(--primaryText);
  font-size: var(--textSize);
  font-family: inherit;
}

.checkBox{
  width: var(--uiElementSmallHeight);
  height: var(--uiElementSmallHeight);
  background-color: var(--hoverBackColor);
}

.checkBox.checked{
  background-color: var(--primaryText);
}

.checkBoxContainer{
  display: flex;
  margin-top: var(--smallMargin);
  line-height: var(--uiElementSmallHeight);
}

.hMenuButton{
  margin: 0px !important; /* overwrite simpleButton */
  flex-grow: 1;
  /* TEXT */
  color: var(--buttonText) !important; /* overwrite simpleButton */
  font-family: "Material Icons" !important; /* overwrite simpleButton */
  font-size: var(--iconsFontSize) !important; /* overwrite simpleButton */
  text-align: center;
  vertical-align: middle;
  height: calc(var(--uiElementHeight) + var(--mediumMargin)) !important; /* overwrite simpleButton */
  line-height: calc(var(--uiElementHeight) + var(--mediumMargin)) !important; /* overwrite simpleButton */ /* = height*/
}

.promotionButton{
  width: 100%;
}


#newOpPageBody, #loginPageBody{
  margin-left: var(--mediumMargin);
  margin-right: var(--mediumMargin);
}


#headerChessTutorLabel {
  vertical-align: middle;
  margin-top: auto;
  margin-bottom: 23px;
  margin-left: 0px;
  font-size: 15px;
}

#header{
  /* GRID */
  grid-area: header;
  /* COLORS */
  background-color: var(--headerBack);
  /* SPACES */
  margin-left: var(--smallMargin);
  /* CONTENT */
  vertical-align: middle;
  display: grid;
  grid-template-columns: 1fr auto;
  grid-template-areas: "headerLeftSide headerRightSide";
}

#headerButton{
  margin-top: calc((var(--headerHeight) - var(--uiElementHeight)) / 2); /* this shouldn't be necessary because the header has vertical-align: middle but really it's needed*/
  margin-right: calc((var(--headerHeight) - var(--uiElementHeight)) / 2);
}

#headerLeftSide{
  grid-area: headerLeftSide;
  display: -webkit-flex; /* Safari */
  display: flex;
}

#headerRightSide{
  grid-area: headerRightSide;
}

#playVarsButton {
  position: absolute;
  margin: 0px;
  padding: 0px;
  right: var(--mediumMargin);
  bottom: calc(var(--uiElementHeight) + 2 * var(--mediumMargin));
  height: var(--uiElementHeight);
  width: var(--uiElementHeight);
  text-align: center;
  line-height: var(--uiElementHeight);
  font-size: var(--iconsFontSize);
}

#archivedOpsSeparator, #archivedVarsSeparator{
  width: 100%;
  height: 2px;
  background-color: var(--hoverBackColor);
}