/* here you find the css attached to the elements mostly by their id */

#home_button {
  margin-top: auto;
  margin-bottom: auto;
  margin-right: 0px;
  margin-left: var(--smallMargin);
}

#opsListPage, #openingPage {
  overflow-y: auto;
  overflow-x: hidden;
}

#newOpButton, #newVariButton {
  position: absolute;
  margin: 0px;
  padding: 0px;
  right: var(--mediumMargin);
  bottom: var(--mediumMargin);
  height: var(--uiElementHeight);
  width: var(--uiElementHeight);
  text-align: center;
  line-height: var(--uiElementHeight);
  font-size: 30px; /* var(--iconsFontSize) */
}

#boardContainer {
  position: relative; /* necessary for the pieces */
  grid-area: boardContainer;
  margin-bottom: -4px;
}

#boardSVG {
  width: 100%;
  /*
  max-height: calc(100vh - var(--headerHeight) - var(--uiElementHeight) - 80px);
  max-width: calc(100vh - var(--headerHeight) - var(--uiElementHeight) - 80px);
  */
}

#touchCircle {
  width: 18.75%;
  height: 18.75%;
  margin: 0px;
  position: absolute;
  will-change: transform;
  border-radius: 50%;
  background-color: rgba(0, 0, 0, 0.3);
  z-index: 0;
}

.selection {
  width: 12.5%;
  position: absolute;
  opacity: 0.6;
  background-color: rgba(0, 0, 0, 0.5);
  z-index: 0;
}

.pieceSVG {
  width: 12.5%;
  position: absolute;
  transition: transform, top, left;
  transition: 0.15s, 0.15s, 0.15s;
  will-change: transform, top, left;
  left: 0px;
  top: 0px;
}

.pieceSVG.noAnimationPiece{
  -webkit-transition-property: none !important;
  -moz-transition-property: none !important;
  -o-transition-property: none !important;
  transition-property: none !important;
  z-index: 2;
}

@media (orientation: portrait) {
  #boardGrid{
    display: grid;
    width: 100%;
    height:  calc(100vh - var(--headerHeight));
    max-width: calc(100vh - var(--headerHeight) - var(--uiElementHeight) - 80px);
    grid-template-rows: auto var(--uiElementHeight) 1fr;
    grid-template-areas: "boardContainer" "boardUI" "boardData";
  }
}

@media (orientation: landscape) {
  #boardGrid{
    display: grid;
    width: 100%;
    height: calc(100vh - var(--headerHeight));
    grid-template-rows: 1fr var(--uiElementHeight);
    grid-template-columns: calc(100vh - var(--headerHeight) - var(--uiElementHeight)) 1fr;
    grid-template-areas: "boardContainer boardData" "boardUI boardData";
  }
}

#boardUI{
  min-height: var(--uiElementHeight);
  width: 100%;
  /*background-color: rgba(0, 0, 0, 0.15); add to make the gap between boardContainer and boardUI visible*/
  grid-area: boardUI;
  display: flex;
}

#boardData{
  grid-area: boardData;
  padding-left: var(--mediumMargin);
  padding-right: var(--mediumMargin);
  padding-top: var(--smallMargin);
  padding-bottom: var(--smallMargin);
  overflow-y: auto;
  font-size: var(--smallTextSize);
  text-align: justify;
  white-space: pre-wrap;
  cursor: pointer;
}

.boardButton{
  margin: 0px !important; /* overwrite simpleButton */
  flex-grow: 1;
  /* TEXT */
  font-family: "Material Icons" !important; /* overwrite simpleButton */
  font-size: var(--iconsFontSize) !important; /* overwrite simpleButton */
  text-align: center;
  vertical-align: middle;
  line-height: var(--uiElementHeight); /* = height*/
}

#moreButton{
  flex-grow: 1;
  /*flex-grow: 0.4;
  max-width: var(--uiElementHeight);
  padding: 0px;*/
}

.textBox{
  margin-top: var(--smallMargin);
  padding-left: 10px;
  border: 0px;

  height: var(--uiElementSmallHeight);
  width: calc(100% - 10px); /*10px = padding-left;*/
  /*max-width: 400px;*/

  background-color: var(--hoverBackColor);
  color: var(--primaryText);
  font-size: var(--textSize);
  font-family: inherit;
  border-radius: var(--borderRadius);
}

.checkBox{
  width: calc(var(--uiElementSmallHeight) - 2 * var(--smallMargin));
  height: calc(var(--uiElementSmallHeight) - 2 * var(--smallMargin));
  background-color: var(--hoverBackColor);
  outline: var(--smallMargin) solid  var(--hoverBackColor);
  margin: var(--smallMargin);
}

.checkBox.checked{
  background-color: var(--primaryText);
}

.checkBoxContainer{
  display: flex;
  margin-top: var(--smallMargin);
  margin-bottom: var(--smallMargin);
  line-height: var(--uiElementSmallHeight);
}


#newOpPageBody, #loginPageBody{
  margin-left: var(--mediumMargin);
  margin-right: var(--mediumMargin);
}


#headerChessTutorLabel {
  vertical-align: middle;
  margin-top: auto;
  margin-bottom: 23px;
  margin-left: 0px;
  font-size: 15px;
}

#header{
  /* GRID */
  grid-area: header;
  /* COLORS */
  background-color: var(--headerBack);
  /* CONTENT */
  vertical-align: middle;
  display: grid;
  grid-template-columns: 1fr auto;
  grid-template-areas: "headerLeftSide headerRightSide";
}

#headerButton{
  margin-top: calc((var(--headerHeight) - var(--uiElementHeight)) / 2); /* this shouldn't be necessary because the header has vertical-align: middle but really it's needed*/
  margin-right: calc((var(--headerHeight) - var(--uiElementHeight)) / 2);
}

#headerLeftSide{
  grid-area: headerLeftSide;
  display: -webkit-flex; /* Safari */
  display: flex;
}

#headerRightSide{
  grid-area: headerRightSide;
}

#playVarsButton {
  position: absolute;
  margin: 0px;
  padding: 0px;
  right: var(--mediumMargin);
  bottom: calc(var(--uiElementHeight) + 2 * var(--mediumMargin));
  height: var(--uiElementHeight);
  width: var(--uiElementHeight);
  text-align: center;
  line-height: var(--uiElementHeight);
  font-size: var(--iconsFontSize);
}

#title{
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;  
  overflow: hidden;
}

.opsSeparator, #archivedVarsSeparator{
  width: 100%;
  height: var(--uiElementMediumHeight);
  line-height: var(--uiElementMediumHeight);
  margin: 0px;
  overflow: hidden;
  text-align: center;
  /*border-bottom: solid 5px var(--hoverBackColor);*/
}

#opsSeparatorWhite, #opsSeparatorBlack{
  cursor: pointer;
}

#opsSeparatorWhite:hover, #opsSeparatorBlack:hover{
  background-color: var(--hoverBackColor);
}

.renameTextBox{
  margin-left: var(--mediumMargin);
  margin-right: var(--mediumMargin);
  width: calc(100% - 2 * var(--mediumMargin) - 12px); /* 12px = padding left+right */
}

#newVariNameTextBox, #renameVariTextbox{
  margin-left: var(--mediumMargin);
  margin-right: 0;
  width: calc(100% - 2 * var(--mediumMargin) - 10px - var(--uiElementHeight)); /* 10px = padding */
  border-top-left-radius: var(--borderRadius);
  border-bottom-left-radius: var(--borderRadius);
  border-top-right-radius: 0px;
  border-bottom-right-radius: 0px;
}

#subNameSelector{
  margin-left: 0;
  /*margin-right: var(--mediumMargin);*/
  width: var(--uiElementHeight);

  height: calc(var(--uiElementSmallHeight) + 2px); /* 2px = textbox padding */
  position: relative;

  border-top-left-radius: 0px;
  border-bottom-left-radius: 0px;
  border-top-right-radius: var(--borderRadius);
  border-bottom-right-radius: var(--borderRadius);
  border: 0;
  border-left: var(--smallMargin) solid var(--backColor);

  padding-left: 2px;

  outline: none;
  background-color: var(--hoverBackColorNonAlpha);
  color: var(--buttonText);
  font-size: var(--textSize);
  font-family: var(--textFont);
}

.subNameOption, select:active, select:hover {
  outline: none;
}

#loadingScreen{
  background-color: rgba(0, 0, 0, 0.8);
  position: absolute;
  top: 0px;
  left: 0px;
  width: 100vw;
  height: 100vh;
  z-index: 10;
}

#loadingScreenBottom{
  display: table-cell;
  vertical-align: bottom;
}

#opsSeparatorWhite, #opsSeparatorBlack{
  -webkit-tap-highlight-color: var(--hoverBackColor)
}

#logoutButton{
  bottom: var(--mediumMargin);
  background-color: var(--hoverBackColor);
  color: var(--alertColor);
}

#logoutButton:hover{
  background-color: var(--alertColor);
  color: var(--backColor);
}

#logoutButton:hover:focus{
  background-color: var(--hoverAlertColor);
  color: var(--backColor);
}

#userPageTabContainer{
  width: 100%;
  display: flex;
}

.userPageTab{
  width: 100%;
  height: var(--uiElementHeight);
  line-height: var(--uiElementHeight);
  text-align: center;
  /*background-color: rgba(0, 0, 0, 0.2);*/
  border-bottom: 2px solid transparent;
}

.userPageTab:hover{
  background-color: var(--hoverBackColor);
}

.userPageTabSelected{
  color: var(--impText);
  background-color: var(--backColor);
  font-size: var(--mediumTextSize);
  border-bottom: 2px solid var(--impText);
}


.mailItem{
  padding-top: var(--smallMargin);
  padding-bottom: var(--smallMargin);
  display: grid;
  grid-template-columns: 1fr auto;
  width: 100%;
}


.mailItemCloseButton{
  margin-left: var(--smallMargin);
  margin-right: 0px;
}

.mailItemOpenButton{
  margin-left: 0px;
  margin-right: var(--smallMargin);
}

#notification{
  position: absolute;
  width: 100vw;
  height: var(--headerHeight);

  font-size: var(--mediumTextSize);

  text-align: center;
  line-height: var(--headerHeight);

  cursor: pointer;

  transition: top .1s ease-out;
  will-change: top;
}

.notificationVisible{
  top: 0px;
}

.notificationHidden{
  top: calc(var(--headerHeight) * (-1));
}

.notificationNormal{
  color: var(--primaryText);
  background-color: var(--headerBack);
}

.notificationImp{
  color: var(--backColor);
  background-color: var(--impText);
}

.notificationAlert{
  color: var(--backColor);
  background-color: var(--alertColor);
}

#noCommentIcon{
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center; /* Vertical center alignment */
  justify-content: center; /* Horizontal center alignment */
}

#doneButton{
  color: var(--impButtonText); 
  background-color: var(--impButtonBack);
}